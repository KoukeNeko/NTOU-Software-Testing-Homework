        -:    0:Source:/Users/doeshing/temp/untitled2/main.cpp
        -:    0:Graph:/Users/doeshing/temp/untitled2/cmake-build-default/CMakeFiles/untitled2.dir/main.cpp.gcno
        -:    0:Data:/Users/doeshing/temp/untitled2/cmake-build-default/CMakeFiles/untitled2.dir/main.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <string>
        -:    2:#include <iostream>
        -:    3:#include <vector>
        -:    4:#include <algorithm>
        -:    5:#include <stdexcept>
        -:    6:
        -:    7:using namespace std;
        -:    8:
        1:    9:vector<string> config_type = {"plus", "sort"};
        1:    9-block  0
branch  0 taken 1
branch  1 taken 0
        1:    9-block  1
branch  2 taken 1
branch  3 taken 0
        1:    9-block  2
branch  4 taken 1
branch  5 taken 0
        1:    9-block  3
        1:    9-block  4
    $$$$$:    9-block  5
        1:    9-block  6
    $$$$$:    9-block  7
    $$$$$:    9-block  8
    $$$$$:    9-block  9
    $$$$$:    9-block 10
    $$$$$:    9-block 11
    $$$$$:    9-block 12
    $$$$$:    9-block 13
    $$$$$:    9-block 14
    $$$$$:    9-block 15
    $$$$$:    9-block 16
        -:   10:
function _Z8module_ARNSt3__16vectorIiNS_9allocatorIiEEEERKNS_12basic_stringIcNS_11char_traitsIcEENS1_IcEEEE called 2 returned 100% blocks executed 80%
        2:   11:int module_A(vector<int>& nums, const string& config) {
        2:   12:    if (ranges::find(config_type, config) == config_type.end()) {
        2:   12-block  0
branch  0 taken 2
branch  1 taken 0
    #####:   13:        throw invalid_argument("ErrorConfig");
    $$$$$:   13-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:   13-block  1
    $$$$$:   13-block  2
    $$$$$:   13-block  3
        -:   14:    }
        2:   15:    if (config == "plus") {
        2:   15-block  0
branch  0 taken 1
branch  1 taken 1
        1:   16:        int ans = 0;
        5:   17:        for (int num : nums) {
        1:   17-block  0
        5:   17-block  1
branch  0 taken 4
branch  1 taken 1
        4:   17-block  2
        4:   17-block  3
        4:   17-block  4
        4:   18:            ans += num;
        -:   19:        }
        1:   20:        return ans;
        1:   20-block  0
        -:   21:    }
        1:   22:    if (config == "sort") {
        1:   22-block  0
branch  0 taken 1
branch  1 taken 0
        1:   23:        int n = nums.size();
        4:   24:        for (int i = 0; i < n - 1; ++i) {
        1:   24-block  0
        4:   24-block  1
branch  0 taken 3
branch  1 taken 1
        3:   24-block  2
        9:   25:            for (int j = 0; j < n - i - 1; ++j) {
        3:   25-block  0
        9:   25-block  1
branch  0 taken 6
branch  1 taken 3
        6:   25-block  2
        6:   26:                if (nums[j] > nums[j + 1]) {
        6:   26-block  0
branch  0 taken 4
branch  1 taken 2
        2:   27:                    swap(nums[j], nums[j + 1]);
        2:   28:                }
        2:   28-block  0
        6:   29:            }
        6:   29-block  0
        3:   30:        }
        3:   30-block  0
        1:   31:        return 0;
        1:   31-block  0
        -:   32:    }
    #####:   33:    return 0;
    $$$$$:   33-block  0
        2:   34:}
        2:   34-block  0
